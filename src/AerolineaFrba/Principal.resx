<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhMQcKAvcAAAAAAAAAMwAAZgAAmQAAzAAA/wArAAArMwArZgArmQArzAAr/wBVAABVMwBVZgBV
        mQBVzABV/wCAAACAMwCAZgCAmQCAzACA/wCqAACqMwCqZgCqmQCqzACq/wDVAADVMwDVZgDVmQDVzADV
        /wD/AAD/MwD/ZgD/mQD/zAD//zMAADMAMzMAZjMAmTMAzDMA/zMrADMrMzMrZjMrmTMrzDMr/zNVADNV
        MzNVZjNVmTNVzDNV/zOAADOAMzOAZjOAmTOAzDOA/zOqADOqMzOqZjOqmTOqzDOq/zPVADPVMzPVZjPV
        mTPVzDPV/zP/ADP/MzP/ZjP/mTP/zDP//2YAAGYAM2YAZmYAmWYAzGYA/2YrAGYrM2YrZmYrmWYrzGYr
        /2ZVAGZVM2ZVZmZVmWZVzGZV/2aAAGaAM2aAZmaAmWaAzGaA/2aqAGaqM2aqZmaqmWaqzGaq/2bVAGbV
        M2bVZmbVmWbVzGbV/2b/AGb/M2b/Zmb/mWb/zGb//5kAAJkAM5kAZpkAmZkAzJkA/5krAJkrM5krZpkr
        mZkrzJkr/5lVAJlVM5lVZplVmZlVzJlV/5mAAJmAM5mAZpmAmZmAzJmA/5mqAJmqM5mqZpmqmZmqzJmq
        /5nVAJnVM5nVZpnVmZnVzJnV/5n/AJn/M5n/Zpn/mZn/zJn//8wAAMwAM8wAZswAmcwAzMwA/8wrAMwr
        M8wrZswrmcwrzMwr/8xVAMxVM8xVZsxVmcxVzMxV/8yAAMyAM8yAZsyAmcyAzMyA/8yqAMyqM8yqZsyq
        mcyqzMyq/8zVAMzVM8zVZszVmczVzMzV/8z/AMz/M8z/Zsz/mcz/zMz///8AAP8AM/8AZv8Amf8AzP8A
        //8rAP8rM/8rZv8rmf8rzP8r//9VAP9VM/9VZv9Vmf9VzP9V//+AAP+AM/+AZv+Amf+AzP+A//+qAP+q
        M/+qZv+qmf+qzP+q///VAP/VM//VZv/Vmf/VzP/V////AP//M///Zv//mf//zP///wAAAAAAAAAAAAAA
        ACH/C05FVFNDQVBFMi4wAwEBAAAh+QQBAAD8ACwAAAAAMQcKAgAIpwD3CRxIsKDBgwgTKlzIsKHDhxAj
        SpxIsaLFixgzatzIsaPHjyBDihxJsqTJkyhTqlzJsqXLlzBjypxJs6bNmzhz6tzJs6fPn0CDCh1KtKjR
        o0iTKl3KtKnTp1CjSp1KtarVq1izat3KtavXr2DDih1LtqzZs2jTql3Ltq3bt3Djyp1Lt67du3jz6t3L
        t6/fv4ADCx5MuLDhw4gTK17MuLHjx5AjS55MRbmy5cuYM2vezLmz58+gQ4seTbq06dOoU6tezbq169ew
        Y8ueTbu27du4c+vezbu379/AgwsfTry48ePIkytfzry58+fQozVLn069uvXr2LNr3869u/fv4MOLH0++
        vPnz6NOrX8++vfv38OPLn0+/vv37+PPr38+/v///ADIGKOCABBZo4IEIJqjgggw26OCDEEYo4YQUVmjh
        hRhmqOGGHHbo4YcghijiiCSWaOKJKCymqOKKLLbo4oswxijjjDTWaOONOOao44489ujjj0AGKeSQRBZp
        5JFIJqnkkihMNunkk1BGKeWUVFZp5ZVYZqnlllx26eWXYIYp5phklmnmmWimqeaaJGy26eabcMYp55x0
        1mnnnXjmqeeefPbp55+ABirooIQWauihiCImquiijDbq6KOQRirppJRWaumlmGaq6aacdurpp6CGKuqo
        IaTiF02pqKaq6qqsturqq7DGKuustNZq66245qrrrrz26h7rr8AGK+ywxBZr7LHIJqvsssw26+yz0EYr
        7bTUVmsd7bXYZqvtttx26+234IYr7rjklmvuueimq+667LYc6+678MYr77z01mvvvfjmq+++/Pbr778A
        ByzwwBoEF2zwwQgnrPDCDDfs8MMQRyzxxBRXbPHFGBpnrPHGHHfs8ccghyzyyCSXbPLJKKes8sostxjs
        8sswxyzzzDTXbPPNOOes88489+zzz0AYBy300EQXbfTRSCet9NJMN+3001BHLfXUFlRXbfXVWGet9dZc
        d+3112CHLfbYZJcXbfbZaKet9tpst+3223DHLffcdNdt990VeOet99589+3334AHLvjghBdu+OGIFSeu
        +OKMN+7445BHLvnklFdu+eWYZxWu+eacd+7556CHLvropJdu+umop64U+uqst+7667DHLvvstNdu++24
        564T++689+7778AHL/zwxBdv/PHIJxSv/PLMN+/889BHL/301Fdv/fXYZxOv/fbcd+/99+CHL/745Jdv
        /vnoE6ev/vrst+/++/DHL//89Ndv//0S+Oev//789+///wAMoAAHSMACExrwgAhMoAIXyMAGOvCBEIyg
        BCcWSMEKWjA/p7qgBjfIwQ568IMgDKEIRxJIwhKa8IQoTKEKV8jCFrrwhTATjKEMZ0jDGtrwhjjMoQ53
        yMMe+hLwh0AMohCHSMQiGvGISEyiEpcSyMQmOvGJUIyiFKdIxSpa8YpYEsyiFrfIxS568YtgDKMYx0jG
        MhKa8YxoTKMa18jGNrrxjXCMoxwQ50jHOtrxjnjMox73yMc++hjxj4AMpCAHSchCGvKQiDzRMpaxj0Um
        8pEUkIykJDsTB0ZO8pKYzKQmN8nJTnoS8pMn1AQoR0nKUprylKhMpSpXEcnKVrrylbCMpSxnScta2vKW
        ELjMpS53ycte+vKXwAymMIcPScxiGvOYyEymMpfJzGY6EfOZ0IymNKdJzWpa85rYzKY2D7fJzW5685vg
        DKc4x0nOcg+a85zoTKc618nOdrrznfAPjKc850nPetrznvjMpz73EsnPfh4zFP4c4iYCStCCGvSgCA9N
        qEIXytCGOvShEI2oRCcSStGKWvSiGM2oRjfK0Y56NDuWE/yoSEdK0pIWMA5xyKBJV8rSlroR9KUwjalM
        Z0rTmg7rAjbNqU4Nd8rTnvr0p0ANqlCHShHUogYHp0ZNqlKXytSmOvWpUA6NqlSnStWqWvWqWM2qVg+3
        ytWuevWrYA2rWMdK1rISRmcZoQipWdfK1ra69a1wjatcDedK17ra9a54zate98oR17769a+ADaxgB0vY
        whoWWgkPOOzyBqDYxjr2sZCNrGQnDkvZylr2spjNrGY3y9nODHr2s6ANrWhHS9rSmg/Wr3E4rWpXy9rW
        uva1sI0NrWxnS9va2va2uM2tbg13y9ve+va3wA2ucIdLEty7IbW4jzvCcZHL3OY697nQjQ2udKdL3epa
        97rYza52DLfL3e5697vgDa94xwxL3vKa97zoTa9618sN3va6973wja9850vf+gza9774za9+98vf/voN
        978ADrCAB0zgAhv4wAwITrCCF8zgBjv4wRAMjrCEJ0zhClv4whjODbCGN8zhDnv4wyAOsYgLR0ziEpv4
        xChOsYoMV8ziFrv4xTCOsYxnC0zjGtv4xjjOsY53DMzjHvv4x0AOspCHTAvkIhv5yEhOspKXzA3kJjv5
        yVCOspSnTOUqC1v5yljOspa3zOUuC3v5y2AOs5jHTOYyC5v5zGhOs5rXzOY2DLv5zXCOs5znTOc62wv5
        znjOs573zOc++wv5z4AOtKAHTehCGw/60IhOtKIXzehGO9peAQEAOw==
</value>
  </data>
</root>